wmlp
====

.. py:module:: wmlp


Classes
-------

.. autoapisummary::

   wmlp.WMLP


Module Contents
---------------

.. py:class:: WMLP(input_dim, output_dim, hidden_dim=100, negative_slope=0.01)

   Bases: :py:obj:`torch.nn.Module`


   Multi-Layer Perceptron with 2 hidden layers (100 neurons each).

   Args:
       input_dim (int): Dimension of input features
       output_dim (int): Dimension of output
       hidden_dim (int): Number of neurons in each hidden layer (default: 100)
       negative_slope (float): Controls the angle of the negative slope for LeakyReLU (default: 0.01)


   .. py:attribute:: fc1


   .. py:attribute:: fc2


   .. py:attribute:: fc3


   .. py:attribute:: activation


   .. py:method:: forward(x)

      Args:
          x (torch.Tensor): Input tensor of shape (batch_size, input_dim)
          
      Returns:
          torch.Tensor: Output tensor of shape (batch_size, output_dim)



